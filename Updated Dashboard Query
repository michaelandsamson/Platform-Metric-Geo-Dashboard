WITH sessions AS (
	SELECT
		*,
		ROW_NUMBER ( ) OVER ( PARTITION BY session_id ORDER BY message_id DESC, from_cornice DESC, created_at DESC, processed_at DESC ) AS rn 
	FROM
		styx_production.sessions 
	WHERE
		DATE >= '2020-02-29' 
	)
	--create sessions subtable
SELECT
sessions.region,
count(case when creatives.ctv = 1 and interactions.name = 'initial' then 1 end) as ctv_initials,
count(case when creatives.mobile = 1 and interactions.name = 'initial' then 1 end) as mobile_initials,
count(case when creatives.desktop = 1 and interactions.name = 'initial' then 1 end) as desktop_initials,
count(case when interactions.name = 'video_completed' and creatives.desktop = 1 then 1 end)::FLOAT/NULLIF(count(case when interactions.name = 'video_started' and creatives.desktop = 1 then 1 end),0) as desktop_vcr,
count(case when interactions.name = 'video_completed' and creatives.mobile = 1 then 1 end)::FLOAT/NULLIF(count(case when interactions.name = 'video_started' and creatives.mobile = 1 then 1 end),0) as mobile_vcr,
count(case when interactions.name = 'video_completed' and creatives.ctv = 1 then 1 end)::FLOAT/NULLIF(count(case when interactions.name = 'video_started' and creatives.ctv= 1 then 1 end),0) as ctv_vcr
from styx_production.interactions
INNER JOIN sessions ON sessions.session_id = interactions.session_id
AND interactions.created_at <= sessions.created_at + INTERVAL '48 hours'
AND sessions.rn = 1 --remove duplicates
LEFT JOIN
facelift.creatives on creatives.id = sessions.creative_id
WHERE sessions.created_at >= convert_timezone('US/PACIFIC', 'UTC', '2020-03-01')
--convert timezone 
AND sessions.date > '2020-02-29'
AND country_code ilike '%us%'
group by 1

